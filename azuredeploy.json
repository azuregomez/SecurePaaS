{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceNamePrefix":{
            "type": "string",
            "metadata": {
              "description": "Prefix for naming resources"
          }
        },          
        "vnetName": {
            "type": "string",
            "defaultValue": "[concat(parameters('resourceNamePrefix'),'-VNET')]",
            "metadata": {
              "description": "Name of VNET"
            }
        },       
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
              "description": "VNet Address prefix"
            }
        },
        "appServiceSubnetName": {
            "type": "string",
            "defaultValue": "AppServiceSubnet",
            "metadata": {
                "description": "Subnet name that will contain the App Service Delegated Subnet"
            }
        },
        "appServiceSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
              "description": "ASE Subnet Address prefix"
            }
        },       
        "wafSubnetName": {
          "type": "string",
          "defaultValue": "WafSubnet",
          "metadata": {
              "description": "Subnet name that will contain App Gateway"
          }
        },
        "wafSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.3.0/24",
            "metadata": {
              "description": "WAF subnet Address prefix"
            }
        },             
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "[concat(parameters('resourceNamePrefix'),'-ASP')]",
            "metadata": {
              "description": "The name of the App Service plan to use for hosting the web app."
            }
        },
        "appServicePlanSKU": {
          "type": "string",
          "allowedValues": [
            "F1",
            "D1",
            "B1",
            "B2",
            "B3",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4"
          ],
          "defaultValue": "S1",
          "metadata": {
            "description": "The pricing tier for the ASP (hosting plan)."
          }
        },
        "appServicePlanCapacity": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
              "description": "Capacity."
            }
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "[parameters('resourceNamePrefix')]",
            "metadata": {
              "description": "The name of the web app that will be created."
            }
        },
        "repoURL": {
            "type": "string",
            "defaultValue":"https://github.com/azuregomez/PersonDemo.git",
            "metadata": {
              "description": "The repo where code lives."
            }
        },
        "repoBranch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
              "description": "Repo branch."
            }
        },
        "sqlServerName": {
          "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'-sqlserver')]",
          "metadata": {
            "description": "sql server name."
          }
        },
        "sqlAdministratorLogin": {
          "type": "string",
          "defaultValue": "azureadmin",
          "metadata": {
              "description": "Username for SQL Admin."
          }
        },
        "sqlAdministratorPassword": {
            "type": "securestring",
            "defaultValue": "p@ssw0rd1!",
            "metadata": {
            "description": "Password for the SQL."
            }
        },
        "sqlDatabaseName": {
          "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'sqldb')]",
          "metadata": {
            "description": "sql server db name."
          }
        },
        "sqldatabaseBacpacUrl":{
          "type": "string",
          "defaultValue": "https://storagegomez.blob.core.windows.net/public/sports.bacpac",
          "metadata": {
            "description": "sql server bacpac location"
          }
        },
        "appgwyName":{
          "type": "string",
          "defaultValue": "[concat(parameters('resourceNamePrefix'),'-appgwy')]",
          "metadata": {
              "description": "App Gateway Name."
          }
        },
        "keyvaultname":{
          "type": "string",
          "defaultValue": "[concat(parameters('resourceNamePrefix'),'-keyvault')]",
          "metadata": {
              "description": "Key Vault Name."
          }
        },
        "tenantId": {
          "type": "string",
          "defaultValue": "[subscription().tenantId]",
          "metadata": {
            "description": "Tenant Id of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API"
          }
        },
        "ADUserObjectID": {
          "type": "string",
          "metadata": {
            "description": "Object Id of the AD user. Get using Get-AzureRmADUser or Get-AzureRmADServicePrincipal cmdlets"
          }
        },
        "vaultSkuName": {
          "type": "string",
          "defaultValue": "Standard",
          "allowedValues": [
            "Standard",
            "Premium"
          ],
          "metadata": {
            "description": "SKU for the vault"
          }
        },
        "cnStringSecretName":{
          "type": "string",
          "defaultValue": "dbcnstr",
          "metadata": {
            "description": "DB cnstring secret name"
          }
        },
        "secretsObject": {
          "type": "secureObject",
          "defaultValue": { "secrets": [ { "secretname":"[parameters('cnStringSecretName')]", "secretvalue":"[concat('Server=tcp:',parameters('sqlServerName'),'.database.windows.net,1433;Initial Catalog=',parameters('sqldatabasename'), ';User ID=', parameters('sqlAdministratorLogin'), ';Password=', parameters('sqlAdministratorPassword'),';')]"}]},
          "metadata": {
            "description": "additional secrets {\"secretName\":\"\",\"secretValue\":\"\"} wrapped in a secure object"
          }
        }
    },
    "variables":{                     
      "delegatedSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('appServiceSubnetName'))]",
      "wafSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('wafSubnetName'))]",
      "wafPublicIPName": "[concat(parameters('appgwyName'),'-vip')]",
      "wafPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('wafPublicIPName'))]",
      "wafMode": "Prevention",
      "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',parameters('appgwyName'))]",
      "applicationGatewaySize":"WAF_v2",
      "applicationGatewayCapacity":2,
      "enableVaultForDeployment": false,
      "enableVaultForDiskEncryption": false,
      "enableVaultForTemplateDeployment": false,
      "cnstrkvref": "[concat('@Microsoft.KeyVault(SecretUri=https://',parameters('keyvaultname'),'.vault.azure.net/secrets/', parameters('cnStringSecretName'),')')]"
    },
    "resources": [        
    {
        "comments": "VNet and Subnets",
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('vnetName')]",
        "location": "[resourcegroup().location]",        
        "properties": {
            "addressSpace": {
            "addressPrefixes": [
              "[parameters('vnetAddressPrefix')]"
            ]
          },
        "subnets": [
            {
              "name": "[parameters('appServiceSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('appServiceSubnetPrefix')]",         
                "serviceEndpoints": [
                  {                      
                      "service": "Microsoft.Sql",
                      "locations": [
                        "[resourcegroup().location]"
                      ]
                  },
                  {                      
                    "service": "Microsoft.Storage",
                    "locations": [
                      "[resourcegroup().location]"
                    ]
                  },
                  {                      
                    "service": "Microsoft.KeyVault",
                    "locations": [
                      "[resourcegroup().location]"
                    ]
                  }
                ],               
              "delegations": [
                  {
                      "name": "delegation",                      
                      "properties": {
                          "serviceName": "Microsoft.Web/serverfarms",
                          "actions": [
                              "Microsoft.Network/virtualNetworks/subnets/action"
                          ]
                      }
                  }
              ]
              }
            },            
            {
              "name": "[parameters('wafSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('wafSubnetPrefix')]"          
              }
            }           
        ]    
      }        
    },      
    {
        "comments": "App Service Plan",
        "apiVersion": "2016-09-01",
        "name": "[parameters('appServicePlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location":  "[resourceGroup().location]",               
        "properties": {
          "name": "[parameters('appServicePlanName')]"          
        },
        "sku": {
          "name": "[concat(parameters('appServicePlanSKU'))]",         
          "capacity": "[parameters('appServicePlanCapacity')]"
        }
    },
    {
        "comments": "Web App",
        "apiVersion": "2018-02-01",      
        "type": "Microsoft.Web/sites",
        "name": "[parameters('webAppName')]",
        "location": "[resourceGroup().location]",       
        "dependsOn": [          
          "[concat('Microsoft.Web/serverFarms/',parameters('appServicePlanName'))]",
          "[concat('Microsoft.Network/publicIPAddresses/',variables('wafPublicIPName'))]"                   
        ],
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "name": "[parameters('webAppName')]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('appServicePlanName'))]",
          "siteConfig":{           
            "ipSecurityRestrictions": [
              {
                "ipAddress": "[concat(reference(variables('wafPublicIPName')).ipAddress,'/32')]",               
                "name": "appgateway",
                "description": "appgateway"
              }
            ],
            "connectionStrings": [
              {
                "name": "[concat('_',parameters('cnStringSecretName'))]",
                "connectionString": "[variables('cnstrkvref')]"
              }
            ]
          }      
        },
        "resources": [
            {
              "apiVersion": "2015-08-01",
              "name": "web",
              "type": "sourcecontrols",
              "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('webAppName'))]"
              ],
              "properties": {
                "RepoUrl": "[parameters('repoURL')]",
                "branch": "[parameters('repoBranch')]",
                "IsManualIntegration": true               
              }
            },
            {
              "name": "virtualNetwork",
              "type": "config",
              "apiVersion": "2018-02-01",
              "location": "[resourcegroup().location]",    
              "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('webAppName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
              ],
              "properties":
              {
                  "subnetResourceId": "[variables('delegatedSubnetRef')]",
                  "swiftSupported": true
              }
            }
          ]
    },
    {
      "name": "[parameters('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "dependsOn": [          
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
      ],
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2018-06-01-preview",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "type": "firewallRules",
          "name": "AllowAllAzureIps",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[parameters('sqlserverName')]"
          ],
          "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[parameters('sqldatabaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2018-06-01-preview",
          "dependsOn": [
            "[parameters('sqlserverName')]"
          ],
          "properties": {
            "edition": "Basic",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "Basic"
          },
          "resources": [
            {
                "name": "Import",
                "type": "extensions",
                "apiVersion": "2014-04-01",
                "dependsOn": [
                    "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlserverName'), parameters('sqldatabaseName'))]"
                ],
                "properties": {
                    "storageKeyType": "SharedAccessKey",
                    "storageKey": "?",
                    "storageUri": "[parameters('sqldatabaseBacpacUrl')]",
                    "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                    "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]",
                    "operationMode": "Import"
                }
            }
        ]
        },
        {
          "name": "sqlvnetrule",
          "type": "virtualNetworkRules",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [            
            "[parameters('sqlserverName')]",
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlserverName'), parameters('sqldatabaseName'))]"
          ],
          "properties": {
            "virtualNetworkSubnetId": "[variables('delegatedSubnetRef')]",
            "ignoreMissingVnetServiceEndpoint": false
          }
        }
      ]
    },
    {
      "comments": "Public IP for App Gateway",
      "apiVersion": "2017-08-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('wafPublicIPName')]",
      "location": "[resourceGroup().location]",  
      "sku":{
        "name":"Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('resourceNamePrefix')]"
        }
      }
    },
    {
      "comments": "App Gateway",
      "apiVersion": "2018-12-01",
      "name": "[parameters('appgwyName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('wafPublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"        
      ],
      "properties": {
        "sku": {
          "name": "[variables('applicationGatewaySize')]",
          "tier": "WAF_v2",
          "capacity": "[variables('applicationGatewayCapacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('wafSubnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('wafPublicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "fqdn": "[concat(parameters('webAppName'),'.azurewebsites.net')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "path": null,
              "probe": {
                "id": "[concat(variables('applicationGatewayID'), '/probes/agProbe1')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Http",
              "pickHostNameFromBackendHttpSettings": true,              
              "path": "/",
              "interval": "30",
              "timeout": "120",
              "unhealthyThreshold": "8"
            },
            "name": "agProbe1"
          }
        ],                     
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": "true",
          "firewallMode": "[variables('wafMode')]",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.0",
          "disabledRuleGroups": [ ]
        }
      }
    },
    {
      "comments": "Key Vault",
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "dependsOn": [          
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
      ],
      "properties": {
        "enabledForDeployment": "[variables('enableVaultForDeployment')]",
        "enabledForDiskEncryption": "[variables('enableVaultForDiskEncryption')]",
        "enabledForTemplateDeployment": "[variables('enableVaultForTemplateDeployment')]",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('ADUserObjectID')]",
            "permissions": {
              "keys": ["all"],
              "secrets": ["all"]
            }
          }
        ],
        "sku": {
          "name": "[parameters('vaultSkuName')]",
          "family": "A"
        }       
      }
    },    
  
    {
      "comments": "AKV secrets - loop",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretsObject').secrets[copyIndex()].secretName)]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[parameters('secretsObject').secrets[copyIndex()].secretValue]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "copy": {
        "name": "secretsCopy",
        "count": "[length(parameters('secretsObject').secrets)]"
      }
    }
  ]
}